plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    //DI
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'

    //Serialization
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.10'
}

android {
    namespace 'com.example.iot'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.iot"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    //DI
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    //Allow to use hiltViewModel composable function to obtain an instance of your @HiltViewModel
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    // Retrofit with Kotlin serialization Converter
    //implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"

    //Kotlin serialization. Need to serialize and de-serialize JSON come from api requests.
    //To use serializable annotation
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"

    //Modelview
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'

    //Navigation
    def nav_version = "2.6.0"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //Permission accompanist
    implementation "com.google.accompanist:accompanist-permissions:0.30.1"

    //COil to display image for camera
    implementation "io.coil-kt:coil-compose:2.4.0"

    //Custom splash screen
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.3.0-rc01"
    // Main library camera-camera2
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"
}

//For DI. Allow references to generated code
kapt {
    correctErrorTypes true
}